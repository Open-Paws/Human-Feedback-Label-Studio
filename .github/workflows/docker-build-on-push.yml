name: "Docker build & push on push"

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: "ghcr.io/${{ github.repository_owner }}/label-studio"
  TAGS: "latest"  
  BASE_DOCKER_IMAGE_VERSION: "1.0"  # Example version, set as needed
  DOCKERFILE_PATH: "Dockerfile"  # Example path, set as needed
  REF: ${{ github.ref }}
  

jobs:
  docker_build_and_push:
    name: "Docker image"
    timeout-minutes: 90
    runs-on: ubuntu-latest
    steps:
      - uses: hmarr/debug-action@v3.0.0

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          ref: ${{ env.REF }}
          fetch-depth: 0

      - name: Calculate Docker tags
        id: calculate-docker-tags
        uses: actions/github-script@v7
        env:
          TAGS: ${{ env.TAGS }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        with:
          script: |
            const raw_tags_input = process.env.TAGS;
            const image_name = process.env.IMAGE_NAME.toLowerCase();
            
            const tags = raw_tags_input.split(',').map(x => x.trim());
            const docker_tags = tags.map(x => `${image_name}:${x}`).join(',');
            console.log(docker_tags);
            core.setOutput("docker-tags", docker_tags);

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Login to GHCR
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        uses: docker/build-push-action@v5.3.0
        id: docker_build_and_push
        with:
          context: .
          file: ${{ env.DOCKERFILE_PATH }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.calculate-docker-tags.outputs.docker-tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
